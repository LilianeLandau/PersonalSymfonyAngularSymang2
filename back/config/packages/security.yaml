security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # Utilisé pour recharger l'utilisateur depuis la session et autres fonctionnalités (par exemple, switch_user)
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
         
        
        #api:
        #    pattern: ^/api
        #    stateless: true
        #    entry_point: jwt
        #    provider: app_user_provider
        #    jwt: ~  # Active l'authentification JWT pour toutes les routes commençant par /api

        
        main:
            pattern: ^/
            lazy: true
            provider: app_user_provider
            jwt: ~  # Active l'authentification JWT pour toutes les routes

            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }  # Permet un accès public à /api/login
        - { path: ^/api/users, roles: ROLE_ADMIN }  # Permet uniquement aux admins d'accéder à /api/users
        - { path: ^/api, roles: PUBLIC_ACCESS }  # Permet uniquement aux utilisateurs authentifiés d'accéder à toutes les autres routes de l'API
        
        # Ajoutez des règles spécifiques pour d'autres routes si nécessaire
        # Exemple : interdire l'accès à certaines parties de l'API uniquement pour des rôles particuliers
        # - { path: ^/api/admin, roles: ROLE_ADMIN }
        # Vous pouvez également autoriser certaines routes pour des utilisateurs ayant un rôle spécifique ou public
